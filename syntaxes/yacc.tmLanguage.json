{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Yacc",
	"patterns": [
		{
			"include": "#declarations"
		},
		{
			"include": "#rules"
		},
		{
			"include": "#epilogue"
		}
	],
	"repository": {
		"declarations": {
			"name": "entity.declarations.yacc",
			"patterns": [
				{
					"include": "#prologue"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#result-type"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#keywords-block"
				},
				{
					"include": "#define"
				}
			]
		},
		"rules": {
			"name": "entity.rules.yacc",
			"begin": "%%",
			"end": "%%",
			"beginCaptures": {
				"0": {
					"name": "markup.bold.yacc"
				}
			},
			"endCaptures": {
				"0": {
					"name": "markup.bold.yacc"
				}
			},
			"patterns": [
				{
					"include": "#results"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#character"
				},
				{
					"include": "#variables"
				},
				{
					"name": "keyword.operator.yacc",
					"match": "[\\|:;]"
				},
				{
					"name": "keyword.other.yacc",
					"match": "%(empty|prec)"
				},
				{
					"name": "entity.action.yacc",
					"begin": "{",
					"end": "}",
					"beginCaptures": {
						"0": {
							"name": "punctuation.paren.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.paren.close"
						}
					},
					"patterns": [
						{
							"include": "#embedded"
						}
					]
				}
			]
		},
		"epilogue": {
			"name": "entity.epilogue.yacc",
			"patterns": [
				{
					"include": "#embedded"
				}
			]
		},
		"keywords": {
			"begin": "^%(option|token|left|right|defines|output|precedence|nterm)\\b",
			"end": "$",
			"beginCaptures": {
				"0": {
					"name": "keyword.other.yacc"
				}
			},
			"patterns": [
				{
					"include": "#number"
				},
				{
					"include": "#variables"
				},
				{
					"include": "#types"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#character"
				}
			]
		},
		"result-type": {
			"begin": "^%type\\b",
			"end": "$",
			"beginCaptures": {
				"0": {
					"name": "keyword.other.yacc"
				}
			},
			"patterns": [
				{
					"include": "#types"
				},
				{
					"name": "support.class.yacc",
					"match": "[a-zA-Z0-9_]+"
				}
			]
		},
		"define": {
			"begin": "^%(define)",
			"end": "$",
			"beginCaptures": {
				"0": {
					"name": "keyword.other.yacc"
				}
			},
			"patterns": [
				{
					"name": "variable.parameter.yacc",
					"match": "[a-zA-Z_\\.]+"
				},
				{
					"begin": "{",
					"end": "}",
					"patterns": [
						{
							"include": "#embedded"
						}
					]
				}
			]
		},
		"keywords-block": {
			"begin": "^%(destructor|union|code requires|code provides|code top|code|printer|parse-param|lex-param)",
			"end": "$",
			"beginCaptures": {
				"0": {
					"name": "keyword.other.yacc"
				}
			},
			"patterns": [
				{
					"name": "entity.action.yacc",
					"begin": "{",
					"end": "}",
					"patterns": [
						{
							"include": "#embedded"
						}
					]
				},
				{
					"include": "#variables"
				}
			]
		},
		"prologue": {
			"name": "entity.prologue.yacc",
			"begin": "%(top)?{",
			"end": "%}",
			"beginCaptures": {
				"0": {
					"name": "markup.inserted.yacc"
				},
				"1": {
					"name": "variable.parameter.yacc"
				}
			},
			"endCaptures": {
				"0": {
					"name": "markup.inserted.yacc"
				}
			},
			"patterns": [
				{
					"include": "#embedded"
				}
			]
		},
		"number": {
			"patterns": [
				{
					"name": "constant.numeric.yacc",
					"match": "[0-9]+((x)[0-9]+)?"
				}
			]
		},
		"types": {
			"match": "<([a-zA-Z_*\b]+)>",
			"captures": {
				"1": {
					"name": "constant.numeric.yacc"
				}
			}
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.parameter.yacc",
					"match": "[a-zA-Z_]+"
				}
			]
		},
		"results": {
			"patterns": [
				{
					"name": "support.class.yacc",
					"match": "^[a-zA-Z_]+"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.yacc",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.yacc",
					"match": "\\\\."
				}
			]
		},
		"character": {
			"patterns": [
				{
					"name": "string.quoted.single.yacc",
					"match": "'(\\\\)?.'"
				},
				{
					"name": "string.quoted.single.yacc",
					"match": "\"(\\\\)?.\""
				}
			]
		},
		"comments": {
			"name": "comment.block.yacc",
			"begin": "/\\*",
			"end": "\\*/"
		},
		"comment": {
			"name": "comment.single.yacc",
			"begin": "//",
			"end": "$"
		},
		"embedded": {
			"patterns": [
				{
					"include": "source.cpp"
				},
				{
					"include": "source.c"
				}
			]
		}
	},
	"scopeName": "source.y"
}